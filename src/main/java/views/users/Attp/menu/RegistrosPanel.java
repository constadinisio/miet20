/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.java.views.users.Attp.menu;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import main.java.database.Conexion;
import main.java.views.users.common.VentanaInicio;

/**
 *
 * @author nico_
 */
public class RegistrosPanel extends javax.swing.JPanel {

    // Conexi贸n a la base de datos
    private Connection conect;

    // Referencia a la ventana principal
    private VentanaInicio ventanaPrincipal;

    // ID del usuario ATTP
    private int attpId;

    /**
     * Creates new form RegistrosPanel
     */
    public RegistrosPanel(VentanaInicio ventanaPrincipal, int attpId) {
        this.ventanaPrincipal = ventanaPrincipal;
        this.attpId = attpId;
        initComponents();
        probar_conexion();
    }

    /**
     * Verifica la conexi贸n a la base de datos.
     */
    private void probar_conexion() {
        conect = Conexion.getInstancia().verificarConexion();
        if (conect == null) {
            JOptionPane.showMessageDialog(this, "Error de conexi贸n.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Boton_Volver3 = new javax.swing.JButton();
        Boton_Mostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Campotxt_Registros = new javax.swing.JTextArea();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Registro de movimiento del patrimonio");

        Boton_Volver3.setText("Volver");
        Boton_Volver3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Volver3ActionPerformed(evt);
            }
        });

        Boton_Mostrar.setText("Mostrar");
        Boton_Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_MostrarActionPerformed(evt);
            }
        });

        Campotxt_Registros.setColumns(20);
        Campotxt_Registros.setRows(5);
        jScrollPane1.setViewportView(Campotxt_Registros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Boton_Volver3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boton_Mostrar)
                .addGap(365, 365, 365))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Boton_Volver3)
                    .addComponent(Boton_Mostrar))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_Volver3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Volver3ActionPerformed
        ventanaPrincipal.restaurarVistaPrincipal();
    }//GEN-LAST:event_Boton_Volver3ActionPerformed

    private void Boton_MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_MostrarActionPerformed
        try {
            FileReader leer = new FileReader("Registros.txt");
            BufferedReader buffertxt = new BufferedReader(leer);
            StringBuilder registros = new StringBuilder();
            String registro;

            while ((registro = buffertxt.readLine()) != null) {
                registros.append(registro).append("\n").append("\n");
            }

            Campotxt_Registros.setText(registros.toString());

            buffertxt.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(RegistrosPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se encontr贸 el archivo de registros.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(RegistrosPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al leer el archivo de registros: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Boton_MostrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Mostrar;
    private javax.swing.JButton Boton_Volver3;
    private javax.swing.JTextArea Campotxt_Registros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
